{"version":3,"sources":["components/layout/831.gif","components/layout/Navbar.js","components/layout/Spinner.js","components/repos/RepoItem.jsx","components/repos/Repos.jsx","context/github/githubContext.jsx","components/users/User.js","context/alert/alertContext.jsx","components/layout/Alert.js","components/users/Search.js","components/users/UserItem.js","context/github/GithubState.jsx","components/users/Users.js","components/pages/Home.jsx","components/pages/About.js","components/pages/NotFound.jsx","context/github/githubReducer.jsx","context/types.jsx","context/alert/alertReducer.jsx","context/alert/AlertState.jsx","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","Spinner","src","spinner","alt","style","width","margin","display","DATE_OPTIONS","weekday","year","month","day","RepoItem","repo","href","html_url","target","rel","name","description","Date","created_at","toLocaleDateString","updated_at","Repos","repos","map","key","id","githubContext","createContext","User","match","useContext","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","avatar_url","location","bio","blog","company","following","followers","public_repos","public_gists","hireable","alertContext","Alert","alert","AlertContext","type","msg","Search","useState","text","setText","onSubmit","e","preventDefault","displayAlert","searchUsers","value","placeholder","onChange","users","length","onClick","clearUsers","UserItem","propType","PropTypes","object","isRequired","githubClientSecret","userStyle","gridTemplateColumns","gridGap","Users","Home","About","NotFound","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4c096bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/831.5051e951.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className={icon} /> {title}\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Catalogue Search',\r\n  icon: 'fab fa-github'\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './831.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '100px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\r\n\r\nexport const RepoItem = ({ repo }) => {\r\n      return (\r\n        <Fragment>\r\n        <div className=\"card grid-3\">\r\n            <h3>\r\n            <i className=\"fab fa-github\" /> | \r\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\r\n            </h3>\r\n            <p>Description: {repo.description}</p>\r\n            <ul>\r\n                <li><strong>Created at:</strong> {(new Date(repo.created_at)).toLocaleDateString('en-US', DATE_OPTIONS)}</li> \r\n                <li><strong>Last update:</strong> {(new Date(repo.updated_at)).toLocaleDateString('en-US', DATE_OPTIONS)}</li>\r\n            </ul>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nRepoItem.propTypes = {\r\n    repo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default RepoItem","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem';\r\n\r\n\r\nconst Repos = ({repos}) => {\r\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id} />)\r\n}\r\n\r\nRepos.propTypes = {\r\n    repos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from 'react';\r\nconst githubContext = createContext();\r\nexport default githubContext;","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link}  from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({match}) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\nconst {\r\n      id,\r\n      name,\r\n      avatar_url,\r\n      location,\r\n      bio,\r\n      blog,\r\n      company,\r\n      following,\r\n      followers,\r\n      login,\r\n      html_url,\r\n      public_repos,\r\n      public_gists,\r\n      hireable,\r\n      created_at,\r\n      updated_at\r\n    } = user;\r\n\r\n    const DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\r\n\r\n    if (loading) return <Spinner />\r\n\r\n    return (\r\n      <Fragment>\r\n        <Link to='/' className='btn btn-dark'>Go back</Link>\r\n        ID: {''} {id} | \r\n        {hireable ? <div className=\"badge badge-success\">Hireable</div> : <div className=\"badge badge-danger\">Not hireable</div>} | \r\n        Member since: {(new Date(created_at)).toLocaleDateString('en-US', DATE_OPTIONS)} | \r\n        Last seen: {(new Date(updated_at)).toLocaleDateString('en-US', DATE_OPTIONS)}\r\n\r\n        <div className=\"card grid-2\">\r\n          <div className=\"all-center\">\r\n            <img src={avatar_url} alt={name} className=\"round-img\" style={{width: '7.5em'}}/>\r\n            <h1>{name}</h1>\r\n            <p>location: {location}</p>\r\n          </div>\r\n          <div>\r\n            {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n            )}\r\n            <a href={html_url} className=\"btn btn-dark my-1\" target=\"_blank\" rel=\"noopener noreferrer\">Visit my profile</a>\r\n            <ul>\r\n              <li>\r\n                {login && <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                  </Fragment>}\r\n              </li>\r\n              <li>\r\n                {login && <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                  </Fragment>}\r\n              </li>\r\n              <li>\r\n                {login && <Fragment>\r\n                  <strong>Website: </strong> <a href={blog} target=\"_blank\" rel=\"noopener noreferrer\">{blog}</a>\r\n                  </Fragment>}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"card text-center\">\r\n                <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n                <div className=\"badge badge-success\">Following: {following}</div>\r\n                <div className=\"badge badge-danger\">Public repos: {public_repos}</div>\r\n                <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\r\n        </div>\r\n\r\n        <Repos repos={repos} />\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import { createContext } from 'react';\r\nconst alertContext = createContext();\r\nexport default alertContext;","import React, {useContext} from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const {alert} = alertContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle'></i> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search =()=> {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.displayAlert('Please enter something to search', 'danger');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={text}\r\n            placeholder='Search our catalogue...'\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value='Search'\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {githubContext.users.length > 0 && (\r\n          <button className='btn-light btn-block' onClick={githubContext.clearUsers}>\r\n            Reset\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\nexport default Search;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { avatar_url, login, html_url } }) => {\r\n  return (\r\n    <div className='card text-center'>\r\n      <img\r\n        src={avatar_url}\r\n        alt='Avatar'\r\n        className='round-img'\r\n        style={{ width: '3.75em' }}\r\n      />\r\n      <h3>{login}</h3>\r\n      <div>\r\n        <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\r\n          Profile\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propType = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;  \r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false\r\n    }\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n// Searching users in the catalogue by\r\n// asking API through props and component\r\n  const searchUsers = async text => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=$\r\n      {githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n        type: SEARCH_USERS,\r\n        payload: res.data.items\r\n    });\r\n  };\r\n\r\n// Locate a single user on Github\r\nconst getUser = async login => {\r\n  setLoading();\r\n\r\n  const res = await axios.get(\r\n    `https://api.github.com/users/${login}?client_id=$\r\n    {githubClientId}&client_secret=${githubClientSecret}`\r\n  );\r\n\r\n  dispatch({\r\n    type: GET_USER,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// List users repos\r\nconst getUserRepos = async login => {\r\n  setLoading();\r\n\r\n  const res = await axios.get(\r\n    `https://api.github.com/users/${login}/repos?per_page=10&sort=created:asc&client_id=$\r\n    {githubClientId}&client_secret=${githubClientSecret}`\r\n  );\r\n  \r\ndispatch({\r\n  type: GET_REPOS,\r\n  payload: res.data\r\n})\r\n};\r\n\r\n  // Reset form and clear state from data\r\n  const clearUsers = () => dispatch({type: CLEAR_USERS});\r\n\r\n// Set Loading\r\nconst setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n    return <GithubContext.Provider\r\n    value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n    }}\r\n    >\r\n    \r\n    {props.children}\r\n    </GithubContext.Provider>\r\n};\r\n\r\nexport default GithubState;","import React, {useContext} from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { loading, users} = githubContext;\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from \"react\";\r\nimport Search from \"../users/Search\";\r\nimport Users from \"../users/Users\";\r\n\r\nconst Home = () => {\r\n    return (\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About this application</h1>\r\n      <p>This small application searches the Github api for users</p>\r\n      <p>Version: 1.0 (202003)</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment } from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n    <Fragment>\r\n        <h1>Not found!</h1>\r\n        <p className=\"lead\">The page you are looking for, does not exist.</p>\r\n        <p>Go back to start page and try again.</p>\r\n    </Fragment>    \r\n    )\r\n}\r\nexport default NotFound;","import {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\n// State is immutable, we copy with spread operator and return data.\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_USERS: \r\n        return {\r\n            ...state,\r\n            users: action.payload,\r\n            loading: false\r\n        }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                loading: false\r\n        }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import {SET_ALERT, REMOVE_ALERT} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return action.payload;\r\n        case REMOVE_ALERT:\r\n            return null;\r\n        default: \r\n        return state;\r\n    }\r\n    \r\n}\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = props => {\r\n    const initialState = null;\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n// Set the alert\r\n// Give warning when user enter no data in search field.\r\nconst displayAlert = (msg, type) => {\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: {msg, type}\r\n    })\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT}), 1500);\r\n  };\r\n\r\n    return <AlertContext.Provider\r\n    value={{\r\n        alert: state,\r\n        displayAlert\r\n        }}\r\n    >\r\n    {props.children}\r\n    </AlertContext.Provider>\r\n};\r\n\r\nexport default AlertState;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport User from \"./components/users/User\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport Home from './components/pages/Home';\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from './components/pages/NotFound';\r\nimport GithubState from \"./context/github/GithubState\";\r\nimport AlertState from \"./context/alert/AlertState\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <div className=\"container\">\r\n              <Alert />\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/user/:login\" component={User} />\r\n                <Route component={NotFound} />\r\n                )} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n};\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}