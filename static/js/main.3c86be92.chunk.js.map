{"version":3,"sources":["components/layout/831.gif","components/layout/Navbar.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/users/Search.js","components/layout/Alert.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","defaultProps","UserItem","user","avatar_url","login","html_url","src","alt","style","width","href","propType","PropTypes","object","isRequired","Spinner","spinner","margin","display","userStyle","gridTemplateColumns","gridGap","Users","users","loading","map","key","id","Search","state","text","onSubmit","e","preventDefault","props","setAlert","searchUsers","setState","onChange","target","value","this","showClear","clearUsers","type","name","placeholder","onClick","Component","Alert","alert","msg","App","a","axios","get","res","data","items","setTimeout","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c86be92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/831.5051e951.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className={icon} /> {title}\r\n      </h1>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Catalogue Search',\r\n  icon: 'fab fa-github'\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserItem = ({ user: { avatar_url, login, html_url } }) => {\r\n  return (\r\n    <div className='card text-center'>\r\n      <img\r\n        src={avatar_url}\r\n        alt='Avatar'\r\n        className='round-img'\r\n        style={{ width: '3.75em' }}\r\n      />\r\n      <h3>{login}</h3>\r\n      <div>\r\n        <a href={html_url} className='btn btn-dark btn-sm my-1'>\r\n          Profile\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propType = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './831.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt='Loading...'\r\n      style={{ width: '100px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Users = ({ users, loading }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nUsers.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n};\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport class Search extends Component {\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    searchUsers: PropTypes.func.isRequired,\r\n    clearUsers: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text === '') {\r\n      this.props.setAlert('Please enter something to search', 'danger');\r\n    } else {\r\n      this.props.searchUsers(this.state.text);\r\n      this.setState({ text: '' });\r\n    }\r\n  };\r\n\r\n  onChange = e => this.setState({ text: e.target.value });\r\n\r\n  render() {\r\n    const { showClear, clearUsers } = this.props;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className='form'>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={this.state.text}\r\n            placeholder='Search our catalogue...'\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value='Search'\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {showClear && (\r\n          <button className='btn-light btn-block' onClick={clearUsers}>\r\n            Reset\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle'></i> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Users from './components/users/Users';\r\nimport Search from './components/users/Search';\r\nimport Alert from './components/layout/Alert';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    users: [],\r\n    loading: false,\r\n    alert: null\r\n  };\r\n\r\n  /*This API call requires API-keys to be stored in your .env.local file.\r\n   Generate your own at https://github.com/settings/applications/new/ */\r\n\r\n  // async componentDidMount() {\r\n  //   this.setState({ loading: true });\r\n  //   const res = await axios.get(\r\n  //     `https://api.github.com/users?client_id=$\r\n  //     {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\r\n  //     {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n  //   );\r\n  //   this.setState({ users: res.data, loading: false });\r\n  // }\r\n\r\n  // Searching users in the catalogue by\r\n  // asking API through props and component\r\n  searchUsers = async text => {\r\n    this.setState({ loading: true });\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=$\r\n      {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\r\n      {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    this.setState({ users: res.data.items, loading: false });\r\n  };\r\n\r\n  // Reset form and clear state from data\r\n  clearUsers = () => this.setState({ users: [], loading: false });\r\n\r\n  // Give warning when user enter no data in search field.\r\n  setAlert = (msg, type) => {\r\n    this.setState({ alert: { msg, type } });\r\n    setTimeout(() => this.setState({ alert: null }), 1500);\r\n  };\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n    return (\r\n      <div className='App'>\r\n        <Navbar />\r\n        <div className='container'>\r\n          <Alert alert={this.state.alert} />\r\n          <Search\r\n            searchUsers={this.searchUsers}\r\n            clearUsers={this.clearUsers}\r\n            showClear={users.length > 0 ? true : false}\r\n            setAlert={this.setAlert}\r\n          />\r\n          <Users loading={loading} users={users} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}